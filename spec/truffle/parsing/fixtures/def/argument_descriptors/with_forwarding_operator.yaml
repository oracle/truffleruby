subject: "Def"
description: "Argument descriptors / with forwarding operator (...)"
notes: >
  Method parameters are described (as ArgumentDescriptor[]) in the following way:
    - ArgumentDescriptor(name = %forward_rest, type = rest)
    - ArgumentDescriptor(name = %forward_kwrest, type = keyrest)
    - ArgumentDescriptor(name = %forward_block, type = block)
  
  So the ... operator is described as a combination of *, ** and & parameters.
focused_on_node: "org.truffleruby.language.methods.LiteralMethodDefinitionNode"
ruby: |
  def foo(...)
  end
ast: |
  LiteralMethodDefinitionNode
      attributes:
          callTargetSupplier = org.truffleruby.language.methods.CachedLazyCallTargetSupplier@...
          flags = 1
          isDefSingleton = false
          name = "foo"
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = true, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = %forward_rest, type = anonrest), ArgumentDescriptor(name = %forward_kwrest, type = anonkeyrest), ArgumentDescriptor(name = %forward_block, type = anonblock)])
          sourceCharIndex = 0
          sourceLength = 16
      call targets:
          RubyMethodRootNode
              attributes:
                  arityForCheck = Arity{preRequired = 0, optional = 0, hasRest = true, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = true}
                  callTarget = Object#foo
                  checkArityProfile = false
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:%method_block_arg, #3:%forward_rest, #4:%forward_kwrest, #5:%forward_block}
                  instrumentationBits = 0
                  keywordArguments = true
                  localReturnProfile = false
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  matchingReturnProfile = false
                  nonMatchingReturnProfile = false
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  retryProfile = false
                  returnID = org.truffleruby.language.control.ReturnID@...
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = true, isImplicitRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = true}, originName = foo, blockDepth = 0, parseName = Object#foo, notes = null, argumentDescriptors = [ArgumentDescriptor(name = %forward_rest, type = anonrest), ArgumentDescriptor(name = %forward_kwrest, type = anonkeyrest), ArgumentDescriptor(name = %forward_block, type = anonblock)])
                  sourceSection = SourceSection(source=<parse_ast> [1:1 - 2:3], index=0, length=16, characters=def foo(...)\nend)
                  split = HEURISTIC
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                              sourceCharIndex = 0
                              sourceLength = 16
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                                                  sourceCharIndex = -1
                                                                  sourceLength = 0
                                  SaveMethodBlockNode
                                      attributes:
                                          flags = 0
                                          slot = 2
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 3 # %forward_rest
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ReadRestArgumentNode
                                                  attributes:
                                                      flags = 0
                                                      keywordArguments = true
                                                      markKeywordHashWithFlag = false
                                                      postArgumentsCount = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                      startIndex = 0
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 4 # %forward_kwrest
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                      children:
                                          valueNode =
                                              ReadKeywordRestArgumentNode
                                                  attributes:
                                                      excludedKeywords = []
                                                      flags = 0
                                                      sourceCharIndex = -1
                                                      sourceLength = 0
                                                  children:
                                                      hashes =
                                                          HashStoreLibraryGen$CachedDispatchFirst
                                                              attributes:
                                                                  limit_ = 3
                                                      readUserKeywordsHashNode =
                                                          ReadUserKeywordsHashNode
                                  SaveMethodBlockNode
                                      attributes:
                                          flags = 0
                                          slot = 5
                                          sourceCharIndex = -1
                                          sourceLength = 0
                                  NilLiteralNode
                                      attributes:
                                          flags = 0
                                          sourceCharIndex = -1
                                          sourceLength = 0
                              ]