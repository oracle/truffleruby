@ ProgramNode (location: (1,0)-(14,41))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(14,41))
    ├── flags: ∅
    └── body: (length: 7)
        ├── @ CaseMatchNode (location: (1,0)-(1,39))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (1,5)-(1,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (1,5)-(1,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (1,10)-(1,34))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedVariableNode (location: (1,13)-(1,34))
        │   │       │   ├── flags: ∅
        │   │       │   ├── variable:
        │   │       │   │   @ GlobalVariableReadNode (location: (1,14)-(1,34))
        │   │       │   │   ├── flags: ∅
        │   │       │   │   └── name: :$TestPatternMatching
        │   │       │   └── operator_loc: (1,13)-(1,14) = "^"
        │   │       ├── statements: ∅
        │   │       ├── in_loc: (1,10)-(1,12) = "in"
        │   │       └── then_loc: ∅
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (1,0)-(1,4) = "case"
        │   └── end_keyword_loc: (1,36)-(1,39) = "end"
        ├── @ CaseMatchNode (location: (3,0)-(3,33))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (3,5)-(3,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (3,5)-(3,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (3,10)-(3,28))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedExpressionNode (location: (3,13)-(3,19))
        │   │       │   ├── flags: ∅
        │   │       │   ├── expression:
        │   │       │   │   @ CallNode (location: (3,15)-(3,18))
        │   │       │   │   ├── flags: ∅
        │   │       │   │   ├── receiver:
        │   │       │   │   │   @ IntegerNode (location: (3,15)-(3,16))
        │   │       │   │   │   ├── flags: static_literal, decimal
        │   │       │   │   │   └── value: 0
        │   │       │   │   ├── call_operator_loc: ∅
        │   │       │   │   ├── name: :+
        │   │       │   │   ├── message_loc: (3,16)-(3,17) = "+"
        │   │       │   │   ├── opening_loc: ∅
        │   │       │   │   ├── arguments:
        │   │       │   │   │   @ ArgumentsNode (location: (3,17)-(3,18))
        │   │       │   │   │   ├── flags: ∅
        │   │       │   │   │   └── arguments: (length: 1)
        │   │       │   │   │       └── @ IntegerNode (location: (3,17)-(3,18))
        │   │       │   │   │           ├── flags: static_literal, decimal
        │   │       │   │   │           └── value: 0
        │   │       │   │   ├── closing_loc: ∅
        │   │       │   │   └── block: ∅
        │   │       │   ├── operator_loc: (3,13)-(3,14) = "^"
        │   │       │   ├── lparen_loc: (3,14)-(3,15) = "("
        │   │       │   └── rparen_loc: (3,18)-(3,19) = ")"
        │   │       ├── statements:
        │   │       │   @ StatementsNode (location: (3,25)-(3,28))
        │   │       │   ├── flags: ∅
        │   │       │   └── body: (length: 1)
        │   │       │       └── @ NilNode (location: (3,25)-(3,28))
        │   │       │           └── flags: newline, static_literal
        │   │       ├── in_loc: (3,10)-(3,12) = "in"
        │   │       └── then_loc: (3,20)-(3,24) = "then"
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (3,0)-(3,4) = "case"
        │   └── end_keyword_loc: (3,30)-(3,33) = "end"
        ├── @ CaseMatchNode (location: (5,0)-(6,6))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (5,5)-(5,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (5,5)-(5,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (5,10)-(6,1))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedExpressionNode (location: (5,13)-(6,1))
        │   │       │   ├── flags: ∅
        │   │       │   ├── expression:
        │   │       │   │   @ IntegerNode (location: (5,15)-(5,16))
        │   │       │   │   ├── flags: static_literal, decimal
        │   │       │   │   └── value: 1
        │   │       │   ├── operator_loc: (5,13)-(5,14) = "^"
        │   │       │   ├── lparen_loc: (5,14)-(5,15) = "("
        │   │       │   └── rparen_loc: (6,0)-(6,1) = ")"
        │   │       ├── statements: ∅
        │   │       ├── in_loc: (5,10)-(5,12) = "in"
        │   │       └── then_loc: ∅
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (5,0)-(5,4) = "case"
        │   └── end_keyword_loc: (6,3)-(6,6) = "end"
        ├── @ CaseMatchNode (location: (8,0)-(8,32))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (8,5)-(8,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (8,5)-(8,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (8,10)-(8,27))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedExpressionNode (location: (8,13)-(8,18))
        │   │       │   ├── flags: ∅
        │   │       │   ├── expression:
        │   │       │   │   @ IntegerNode (location: (8,15)-(8,17))
        │   │       │   │   ├── flags: static_literal, decimal
        │   │       │   │   └── value: 42
        │   │       │   ├── operator_loc: (8,13)-(8,14) = "^"
        │   │       │   ├── lparen_loc: (8,14)-(8,15) = "("
        │   │       │   └── rparen_loc: (8,17)-(8,18) = ")"
        │   │       ├── statements:
        │   │       │   @ StatementsNode (location: (8,24)-(8,27))
        │   │       │   ├── flags: ∅
        │   │       │   └── body: (length: 1)
        │   │       │       └── @ NilNode (location: (8,24)-(8,27))
        │   │       │           └── flags: newline, static_literal
        │   │       ├── in_loc: (8,10)-(8,12) = "in"
        │   │       └── then_loc: (8,19)-(8,23) = "then"
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (8,0)-(8,4) = "case"
        │   └── end_keyword_loc: (8,29)-(8,32) = "end"
        ├── @ CaseMatchNode (location: (10,0)-(10,40))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (10,5)-(10,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (10,5)-(10,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (10,10)-(10,35))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedVariableNode (location: (10,13)-(10,35))
        │   │       │   ├── flags: ∅
        │   │       │   ├── variable:
        │   │       │   │   @ ClassVariableReadNode (location: (10,14)-(10,35))
        │   │       │   │   ├── flags: ∅
        │   │       │   │   └── name: :@@TestPatternMatching
        │   │       │   └── operator_loc: (10,13)-(10,14) = "^"
        │   │       ├── statements: ∅
        │   │       ├── in_loc: (10,10)-(10,12) = "in"
        │   │       └── then_loc: ∅
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (10,0)-(10,4) = "case"
        │   └── end_keyword_loc: (10,37)-(10,40) = "end"
        ├── @ CaseMatchNode (location: (12,0)-(12,21))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (12,5)-(12,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (12,5)-(12,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (12,10)-(12,16))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ PinnedVariableNode (location: (12,13)-(12,16))
        │   │       │   ├── flags: ∅
        │   │       │   ├── variable:
        │   │       │   │   @ InstanceVariableReadNode (location: (12,14)-(12,16))
        │   │       │   │   ├── flags: ∅
        │   │       │   │   └── name: :@a
        │   │       │   └── operator_loc: (12,13)-(12,14) = "^"
        │   │       ├── statements: ∅
        │   │       ├── in_loc: (12,10)-(12,12) = "in"
        │   │       └── then_loc: ∅
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (12,0)-(12,4) = "case"
        │   └── end_keyword_loc: (12,18)-(12,21) = "end"
        └── @ CaseMatchNode (location: (14,0)-(14,41))
            ├── flags: newline
            ├── predicate:
            │   @ CallNode (location: (14,5)-(14,8))
            │   ├── flags: variable_call, ignore_visibility
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :foo
            │   ├── message_loc: (14,5)-(14,8) = "foo"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (14,10)-(14,36))
            │       ├── flags: ∅
            │       ├── pattern:
            │       │   @ HashPatternNode (location: (14,13)-(14,27))
            │       │   ├── flags: ∅
            │       │   ├── constant: ∅
            │       │   ├── elements: (length: 1)
            │       │   │   └── @ AssocNode (location: (14,15)-(14,25))
            │       │   │       ├── flags: ∅
            │       │   │       ├── key:
            │       │   │       │   @ SymbolNode (location: (14,15)-(14,19))
            │       │   │       │   ├── flags: static_literal, forced_us_ascii_encoding
            │       │   │       │   ├── opening_loc: ∅
            │       │   │       │   ├── value_loc: (14,15)-(14,18) = "foo"
            │       │   │       │   ├── closing_loc: (14,18)-(14,19) = ":"
            │       │   │       │   └── unescaped: "foo"
            │       │   │       ├── value:
            │       │   │       │   @ PinnedExpressionNode (location: (14,20)-(14,25))
            │       │   │       │   ├── flags: ∅
            │       │   │       │   ├── expression:
            │       │   │       │   │   @ IntegerNode (location: (14,22)-(14,24))
            │       │   │       │   │   ├── flags: static_literal, decimal
            │       │   │       │   │   └── value: 42
            │       │   │       │   ├── operator_loc: (14,20)-(14,21) = "^"
            │       │   │       │   ├── lparen_loc: (14,21)-(14,22) = "("
            │       │   │       │   └── rparen_loc: (14,24)-(14,25) = ")"
            │       │   │       └── operator_loc: ∅
            │       │   ├── rest: ∅
            │       │   ├── opening_loc: (14,13)-(14,14) = "{"
            │       │   └── closing_loc: (14,26)-(14,27) = "}"
            │       ├── statements:
            │       │   @ StatementsNode (location: (14,33)-(14,36))
            │       │   ├── flags: ∅
            │       │   └── body: (length: 1)
            │       │       └── @ NilNode (location: (14,33)-(14,36))
            │       │           └── flags: newline, static_literal
            │       ├── in_loc: (14,10)-(14,12) = "in"
            │       └── then_loc: (14,28)-(14,32) = "then"
            ├── else_clause: ∅
            ├── case_keyword_loc: (14,0)-(14,4) = "case"
            └── end_keyword_loc: (14,38)-(14,41) = "end"
