@ ProgramNode (location: (1,0)-(3,36))
├── flags: ∅
├── locals: [:x]
└── statements:
    @ StatementsNode (location: (1,0)-(3,36))
    ├── flags: ∅
    └── body: (length: 2)
        ├── @ CaseMatchNode (location: (1,0)-(1,32))
        │   ├── flags: newline
        │   ├── predicate:
        │   │   @ CallNode (location: (1,5)-(1,8))
        │   │   ├── flags: variable_call, ignore_visibility
        │   │   ├── receiver: ∅
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :foo
        │   │   ├── message_loc: (1,5)-(1,8) = "foo"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments: ∅
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   ├── conditions: (length: 1)
        │   │   └── @ InNode (location: (1,10)-(1,27))
        │   │       ├── flags: ∅
        │   │       ├── pattern:
        │   │       │   @ IfNode (location: (1,13)-(1,22))
        │   │       │   ├── flags: newline
        │   │       │   ├── if_keyword_loc: (1,15)-(1,17) = "if"
        │   │       │   ├── predicate:
        │   │       │   │   @ TrueNode (location: (1,18)-(1,22))
        │   │       │   │   └── flags: static_literal
        │   │       │   ├── then_keyword_loc: ∅
        │   │       │   ├── statements:
        │   │       │   │   @ StatementsNode (location: (1,13)-(1,14))
        │   │       │   │   ├── flags: ∅
        │   │       │   │   └── body: (length: 1)
        │   │       │   │       └── @ LocalVariableTargetNode (location: (1,13)-(1,14))
        │   │       │   │           ├── flags: newline
        │   │       │   │           ├── name: :x
        │   │       │   │           └── depth: 0
        │   │       │   ├── subsequent: ∅
        │   │       │   └── end_keyword_loc: ∅
        │   │       ├── statements:
        │   │       │   @ StatementsNode (location: (1,24)-(1,27))
        │   │       │   ├── flags: ∅
        │   │       │   └── body: (length: 1)
        │   │       │       └── @ NilNode (location: (1,24)-(1,27))
        │   │       │           └── flags: newline, static_literal
        │   │       ├── in_loc: (1,10)-(1,12) = "in"
        │   │       └── then_loc: ∅
        │   ├── else_clause: ∅
        │   ├── case_keyword_loc: (1,0)-(1,4) = "case"
        │   └── end_keyword_loc: (1,29)-(1,32) = "end"
        └── @ CaseMatchNode (location: (3,0)-(3,36))
            ├── flags: newline
            ├── predicate:
            │   @ CallNode (location: (3,5)-(3,8))
            │   ├── flags: variable_call, ignore_visibility
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :foo
            │   ├── message_loc: (3,5)-(3,8) = "foo"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (3,10)-(3,31))
            │       ├── flags: ∅
            │       ├── pattern:
            │       │   @ UnlessNode (location: (3,13)-(3,26))
            │       │   ├── flags: newline
            │       │   ├── keyword_loc: (3,15)-(3,21) = "unless"
            │       │   ├── predicate:
            │       │   │   @ TrueNode (location: (3,22)-(3,26))
            │       │   │   └── flags: static_literal
            │       │   ├── then_keyword_loc: ∅
            │       │   ├── statements:
            │       │   │   @ StatementsNode (location: (3,13)-(3,14))
            │       │   │   ├── flags: ∅
            │       │   │   └── body: (length: 1)
            │       │   │       └── @ LocalVariableTargetNode (location: (3,13)-(3,14))
            │       │   │           ├── flags: newline
            │       │   │           ├── name: :x
            │       │   │           └── depth: 0
            │       │   ├── else_clause: ∅
            │       │   └── end_keyword_loc: ∅
            │       ├── statements:
            │       │   @ StatementsNode (location: (3,28)-(3,31))
            │       │   ├── flags: ∅
            │       │   └── body: (length: 1)
            │       │       └── @ NilNode (location: (3,28)-(3,31))
            │       │           └── flags: newline, static_literal
            │       ├── in_loc: (3,10)-(3,12) = "in"
            │       └── then_loc: ∅
            ├── else_clause: ∅
            ├── case_keyword_loc: (3,0)-(3,4) = "case"
            └── end_keyword_loc: (3,33)-(3,36) = "end"
