@ ProgramNode (location: (1,0)-(3,31))
├── flags: ∅
├── locals: [:a, :match]
└── statements:
    @ StatementsNode (location: (1,0)-(3,31))
    ├── flags: ∅
    └── body: (length: 6)
        ├── @ MatchWriteNode (location: (1,0)-(1,16))
        │   ├── flags: newline
        │   ├── call:
        │   │   @ CallNode (location: (1,0)-(1,16))
        │   │   ├── flags: ∅
        │   │   ├── receiver:
        │   │   │   @ RegularExpressionNode (location: (1,0)-(1,9))
        │   │   │   ├── flags: static_literal, forced_us_ascii_encoding
        │   │   │   ├── opening_loc: (1,0)-(1,1) = "/"
        │   │   │   ├── content_loc: (1,1)-(1,8) = "(?<a>a)"
        │   │   │   ├── closing_loc: (1,8)-(1,9) = "/"
        │   │   │   └── unescaped: "(?<a>a)"
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :=~
        │   │   ├── message_loc: (1,10)-(1,12) = "=~"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments:
        │   │   │   @ ArgumentsNode (location: (1,13)-(1,16))
        │   │   │   ├── flags: ∅
        │   │   │   └── arguments: (length: 1)
        │   │   │       └── @ StringNode (location: (1,13)-(1,16))
        │   │   │           ├── flags: ∅
        │   │   │           ├── opening_loc: (1,13)-(1,14) = "'"
        │   │   │           ├── content_loc: (1,14)-(1,15) = "a"
        │   │   │           ├── closing_loc: (1,15)-(1,16) = "'"
        │   │   │           └── unescaped: "a"
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   └── targets: (length: 1)
        │       └── @ LocalVariableTargetNode (location: (1,4)-(1,5))
        │           ├── flags: ∅
        │           ├── name: :a
        │           └── depth: 0
        ├── @ CallNode (location: (1,18)-(1,37))
        │   ├── flags: newline
        │   ├── receiver:
        │   │   @ InterpolatedRegularExpressionNode (location: (1,18)-(1,30))
        │   │   ├── flags: ∅
        │   │   ├── opening_loc: (1,18)-(1,19) = "/"
        │   │   ├── parts: (length: 2)
        │   │   │   ├── @ EmbeddedStatementsNode (location: (1,19)-(1,22))
        │   │   │   │   ├── flags: ∅
        │   │   │   │   ├── opening_loc: (1,19)-(1,21) = "\#{"
        │   │   │   │   ├── statements: ∅
        │   │   │   │   └── closing_loc: (1,21)-(1,22) = "}"
        │   │   │   └── @ StringNode (location: (1,22)-(1,29))
        │   │   │       ├── flags: static_literal, frozen
        │   │   │       ├── opening_loc: ∅
        │   │   │       ├── content_loc: (1,22)-(1,29) = "(?<b>b)"
        │   │   │       ├── closing_loc: ∅
        │   │   │       └── unescaped: "(?<b>b)"
        │   │   └── closing_loc: (1,29)-(1,30) = "/"
        │   ├── call_operator_loc: ∅
        │   ├── name: :=~
        │   ├── message_loc: (1,31)-(1,33) = "=~"
        │   ├── opening_loc: ∅
        │   ├── arguments:
        │   │   @ ArgumentsNode (location: (1,34)-(1,37))
        │   │   ├── flags: ∅
        │   │   └── arguments: (length: 1)
        │   │       └── @ StringNode (location: (1,34)-(1,37))
        │   │           ├── flags: ∅
        │   │           ├── opening_loc: (1,34)-(1,35) = "'"
        │   │           ├── content_loc: (1,35)-(1,36) = "b"
        │   │           ├── closing_loc: (1,36)-(1,37) = "'"
        │   │           └── unescaped: "b"
        │   ├── closing_loc: ∅
        │   └── block: ∅
        ├── @ LocalVariableReadNode (location: (1,39)-(1,40))
        │   ├── flags: newline
        │   ├── name: :a
        │   └── depth: 0
        ├── @ CallNode (location: (1,42)-(1,43))
        │   ├── flags: newline, variable_call, ignore_visibility
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :b
        │   ├── message_loc: (1,42)-(1,43) = "b"
        │   ├── opening_loc: ∅
        │   ├── arguments: ∅
        │   ├── closing_loc: ∅
        │   └── block: ∅
        ├── @ MatchWriteNode (location: (3,0)-(3,24))
        │   ├── flags: newline
        │   ├── call:
        │   │   @ CallNode (location: (3,0)-(3,24))
        │   │   ├── flags: ∅
        │   │   ├── receiver:
        │   │   │   @ RegularExpressionNode (location: (3,0)-(3,15))
        │   │   │   ├── flags: static_literal, forced_us_ascii_encoding
        │   │   │   ├── opening_loc: (3,0)-(3,1) = "/"
        │   │   │   ├── content_loc: (3,1)-(3,14) = "(?<match>bar)"
        │   │   │   ├── closing_loc: (3,14)-(3,15) = "/"
        │   │   │   └── unescaped: "(?<match>bar)"
        │   │   ├── call_operator_loc: ∅
        │   │   ├── name: :=~
        │   │   ├── message_loc: (3,16)-(3,18) = "=~"
        │   │   ├── opening_loc: ∅
        │   │   ├── arguments:
        │   │   │   @ ArgumentsNode (location: (3,19)-(3,24))
        │   │   │   ├── flags: ∅
        │   │   │   └── arguments: (length: 1)
        │   │   │       └── @ StringNode (location: (3,19)-(3,24))
        │   │   │           ├── flags: ∅
        │   │   │           ├── opening_loc: (3,19)-(3,20) = "'"
        │   │   │           ├── content_loc: (3,20)-(3,23) = "bar"
        │   │   │           ├── closing_loc: (3,23)-(3,24) = "'"
        │   │   │           └── unescaped: "bar"
        │   │   ├── closing_loc: ∅
        │   │   └── block: ∅
        │   └── targets: (length: 1)
        │       └── @ LocalVariableTargetNode (location: (3,4)-(3,9))
        │           ├── flags: ∅
        │           ├── name: :match
        │           └── depth: 0
        └── @ LocalVariableReadNode (location: (3,26)-(3,31))
            ├── flags: newline
            ├── name: :match
            └── depth: 0
