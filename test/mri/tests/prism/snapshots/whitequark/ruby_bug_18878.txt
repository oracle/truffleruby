@ ProgramNode (location: (1,0)-(1,19))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,19))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,19))
            ├── flags: newline
            ├── receiver:
            │   @ ConstantReadNode (location: (1,0)-(1,3))
            │   ├── flags: ∅
            │   └── name: :Foo
            ├── call_operator_loc: (1,3)-(1,5) = "::"
            ├── name: :Bar
            ├── message_loc: (1,5)-(1,8) = "Bar"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,9)-(1,19))
                ├── flags: ∅
                ├── locals: [:a]
                ├── parameters:
                │   @ BlockParametersNode (location: (1,11)-(1,14))
                │   ├── flags: ∅
                │   ├── parameters:
                │   │   @ ParametersNode (location: (1,12)-(1,13))
                │   │   ├── flags: ∅
                │   │   ├── requireds: (length: 1)
                │   │   │   └── @ RequiredParameterNode (location: (1,12)-(1,13))
                │   │   │       ├── flags: ∅
                │   │   │       └── name: :a
                │   │   ├── optionals: (length: 0)
                │   │   ├── rest: ∅
                │   │   ├── posts: (length: 0)
                │   │   ├── keywords: (length: 0)
                │   │   ├── keyword_rest: ∅
                │   │   └── block: ∅
                │   ├── locals: (length: 0)
                │   ├── opening_loc: (1,11)-(1,12) = "|"
                │   └── closing_loc: (1,13)-(1,14) = "|"
                ├── body:
                │   @ StatementsNode (location: (1,15)-(1,17))
                │   ├── flags: ∅
                │   └── body: (length: 1)
                │       └── @ IntegerNode (location: (1,15)-(1,17))
                │           ├── flags: newline, static_literal, decimal
                │           └── value: 42
                ├── opening_loc: (1,9)-(1,10) = "{"
                └── closing_loc: (1,18)-(1,19) = "}"
