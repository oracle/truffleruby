@ ProgramNode (location: (1,0)-(1,26))
├── flags: ∅
├── locals: [:x]
└── statements:
    @ StatementsNode (location: (1,0)-(1,26))
    ├── flags: ∅
    └── body: (length: 1)
        └── @ CaseMatchNode (location: (1,0)-(1,26))
            ├── flags: newline
            ├── predicate:
            │   @ CallNode (location: (1,5)-(1,8))
            │   ├── flags: variable_call, ignore_visibility
            │   ├── receiver: ∅
            │   ├── call_operator_loc: ∅
            │   ├── name: :foo
            │   ├── message_loc: (1,5)-(1,8) = "foo"
            │   ├── opening_loc: ∅
            │   ├── arguments: ∅
            │   ├── closing_loc: ∅
            │   └── block: ∅
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (1,10)-(1,21))
            │       ├── flags: ∅
            │       ├── pattern:
            │       │   @ LocalVariableTargetNode (location: (1,13)-(1,14))
            │       │   ├── flags: ∅
            │       │   ├── name: :x
            │       │   └── depth: 0
            │       ├── statements:
            │       │   @ StatementsNode (location: (1,20)-(1,21))
            │       │   ├── flags: ∅
            │       │   └── body: (length: 1)
            │       │       └── @ LocalVariableReadNode (location: (1,20)-(1,21))
            │       │           ├── flags: newline
            │       │           ├── name: :x
            │       │           └── depth: 0
            │       ├── in_loc: (1,10)-(1,12) = "in"
            │       └── then_loc: (1,15)-(1,19) = "then"
            ├── else_clause: ∅
            ├── case_keyword_loc: (1,0)-(1,4) = "case"
            └── end_keyword_loc: (1,23)-(1,26) = "end"
