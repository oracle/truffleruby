# frozen_string_literal: true

# Copyright (c) 2022, 2025 Oracle and/or its affiliates. All rights reserved. This
# code is released under a tri EPL/GPL/LGPL license. You can use it,
# redistribute it and/or modify it under the terms of the:
#
# Eclipse Public License version 2.0, or
# GNU General Public License version 2, or
# GNU Lesser General Public License version 2.1.

# GENERATED BY tool/generate-polyglot-methods.rb

module Polyglot
  module StringTrait
    def %(...)
      to_s.%(...)
    end

    def *(...)
      to_s.*(...)
    end

    def +(...)
      to_s.+(...)
    end

    def +@(...)
      to_s.+@(...)
    end

    def -@(...)
      to_s.-@(...)
    end

    def <<(...)
      to_s.<<(...)
    end

    def <=>(...)
      to_s.<=>(...)
    end

    def ==(...)
      to_s.==(...)
    end

    def ===(...)
      to_s.===(...)
    end

    def =~(...)
      to_s.=~(...)
    end

    def [](...)
      to_s.[](...)
    end

    def []=(...)
      to_s.[]=(...)
    end

    def ascii_only?(...)
      to_s.ascii_only?(...)
    end

    def b(...)
      to_s.b(...)
    end

    def byteindex(...)
      to_s.byteindex(...)
    end

    def byterindex(...)
      to_s.byterindex(...)
    end

    def bytes(...)
      to_s.bytes(...)
    end

    def bytesize(...)
      to_s.bytesize(...)
    end

    def byteslice(...)
      to_s.byteslice(...)
    end

    def bytesplice(...)
      to_s.bytesplice(...)
    end

    def capitalize(...)
      to_s.capitalize(...)
    end

    def capitalize!(...)
      to_s.capitalize!(...)
    end

    def casecmp(...)
      to_s.casecmp(...)
    end

    def casecmp?(...)
      to_s.casecmp?(...)
    end

    def center(...)
      to_s.center(...)
    end

    def chars(...)
      to_s.chars(...)
    end

    def chomp(...)
      to_s.chomp(...)
    end

    def chomp!(...)
      to_s.chomp!(...)
    end

    def chop(...)
      to_s.chop(...)
    end

    def chop!(...)
      to_s.chop!(...)
    end

    def chr(...)
      to_s.chr(...)
    end

    def clear(...)
      to_s.clear(...)
    end

    def clone(...)
      to_s.clone(...)
    end

    def codepoints(...)
      to_s.codepoints(...)
    end

    def concat(...)
      to_s.concat(...)
    end

    def count(...)
      to_s.count(...)
    end

    def crypt(...)
      to_s.crypt(...)
    end

    def dedup(...)
      to_s.dedup(...)
    end

    def delete(...)
      to_s.delete(...)
    end

    def delete!(...)
      to_s.delete!(...)
    end

    def delete_prefix(...)
      to_s.delete_prefix(...)
    end

    def delete_prefix!(...)
      to_s.delete_prefix!(...)
    end

    def delete_suffix(...)
      to_s.delete_suffix(...)
    end

    def delete_suffix!(...)
      to_s.delete_suffix!(...)
    end

    def downcase(...)
      to_s.downcase(...)
    end

    def downcase!(...)
      to_s.downcase!(...)
    end

    def dump(...)
      to_s.dump(...)
    end

    def dup(...)
      to_s.dup(...)
    end

    def each_byte(...)
      to_s.each_byte(...)
    end

    def each_char(...)
      to_s.each_char(...)
    end

    def each_codepoint(...)
      to_s.each_codepoint(...)
    end

    def each_grapheme_cluster(...)
      to_s.each_grapheme_cluster(...)
    end

    def each_line(...)
      to_s.each_line(...)
    end

    def empty?(...)
      to_s.empty?(...)
    end

    def encode(...)
      to_s.encode(...)
    end

    def encode!(...)
      to_s.encode!(...)
    end

    def encoding(...)
      to_s.encoding(...)
    end

    def end_with?(...)
      to_s.end_with?(...)
    end

    def eql?(...)
      to_s.eql?(...)
    end

    def force_encoding(...)
      to_s.force_encoding(...)
    end

    def getbyte(...)
      to_s.getbyte(...)
    end

    def grapheme_clusters(...)
      to_s.grapheme_clusters(...)
    end

    def gsub(...)
      to_s.gsub(...)
    end

    def gsub!(...)
      to_s.gsub!(...)
    end

    def hash(...)
      to_s.hash(...)
    end

    def hex(...)
      to_s.hex(...)
    end

    def include?(...)
      to_s.include?(...)
    end

    def index(...)
      to_s.index(...)
    end

    def insert(...)
      to_s.insert(...)
    end

    def inspect(...)
      to_s.inspect(...)
    end

    def intern(...)
      to_s.intern(...)
    end

    def length(...)
      to_s.length(...)
    end

    def lines(...)
      to_s.lines(...)
    end

    def ljust(...)
      to_s.ljust(...)
    end

    def lstrip(...)
      to_s.lstrip(...)
    end

    def lstrip!(...)
      to_s.lstrip!(...)
    end

    def match(...)
      to_s.match(...)
    end

    def match?(...)
      to_s.match?(...)
    end

    def next(...)
      to_s.next(...)
    end

    def next!(...)
      to_s.next!(...)
    end

    def oct(...)
      to_s.oct(...)
    end

    def ord(...)
      to_s.ord(...)
    end

    def partition(...)
      to_s.partition(...)
    end

    def prepend(...)
      to_s.prepend(...)
    end

    def replace(...)
      to_s.replace(...)
    end

    def reverse(...)
      to_s.reverse(...)
    end

    def reverse!(...)
      to_s.reverse!(...)
    end

    def rindex(...)
      to_s.rindex(...)
    end

    def rjust(...)
      to_s.rjust(...)
    end

    def rpartition(...)
      to_s.rpartition(...)
    end

    def rstrip(...)
      to_s.rstrip(...)
    end

    def rstrip!(...)
      to_s.rstrip!(...)
    end

    def scan(...)
      to_s.scan(...)
    end

    def scrub(...)
      to_s.scrub(...)
    end

    def scrub!(...)
      to_s.scrub!(...)
    end

    def setbyte(...)
      to_s.setbyte(...)
    end

    def size(...)
      to_s.size(...)
    end

    def slice(...)
      to_s.slice(...)
    end

    def slice!(...)
      to_s.slice!(...)
    end

    def split(...)
      to_s.split(...)
    end

    def squeeze(...)
      to_s.squeeze(...)
    end

    def squeeze!(...)
      to_s.squeeze!(...)
    end

    def start_with?(...)
      to_s.start_with?(...)
    end

    def strip(...)
      to_s.strip(...)
    end

    def strip!(...)
      to_s.strip!(...)
    end

    def sub(...)
      to_s.sub(...)
    end

    def sub!(...)
      to_s.sub!(...)
    end

    def succ(...)
      to_s.succ(...)
    end

    def succ!(...)
      to_s.succ!(...)
    end

    def sum(...)
      to_s.sum(...)
    end

    def swapcase(...)
      to_s.swapcase(...)
    end

    def swapcase!(...)
      to_s.swapcase!(...)
    end

    def to_c(...)
      to_s.to_c(...)
    end

    def to_f(...)
      to_s.to_f(...)
    end

    def to_i(...)
      to_s.to_i(...)
    end

    def to_r(...)
      to_s.to_r(...)
    end

    def to_sym(...)
      to_s.to_sym(...)
    end

    def tr(...)
      to_s.tr(...)
    end

    def tr!(...)
      to_s.tr!(...)
    end

    def tr_s(...)
      to_s.tr_s(...)
    end

    def tr_s!(...)
      to_s.tr_s!(...)
    end

    def undump(...)
      to_s.undump(...)
    end

    def unicode_normalize(...)
      to_s.unicode_normalize(...)
    end

    def unicode_normalize!(...)
      to_s.unicode_normalize!(...)
    end

    def unicode_normalized?(...)
      to_s.unicode_normalized?(...)
    end

    def unpack(...)
      to_s.unpack(...)
    end

    def unpack1(...)
      to_s.unpack1(...)
    end

    def upcase(...)
      to_s.upcase(...)
    end

    def upcase!(...)
      to_s.upcase!(...)
    end

    def upto(...)
      to_s.upto(...)
    end

    def valid_encoding?(...)
      to_s.valid_encoding?(...)
    end

  end
end
